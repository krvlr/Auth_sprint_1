version: '3'

volumes:
  postgres_data:
  redis_data:

networks:
  movies_network:

services:
  db-auth:
    image: postgres:13-alpine
    container_name: db-auth
    restart: always
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - movies_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$AUTH_POSTGRES_DB -U $$AUTH_POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    ports:
      - "5432:5432" # TODO remove

  redis-auth:
    image: redis:7.0.8-alpine
    container_name: redis-auth
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - movies_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    ports:
      - "6379:6379" # TODO remove

  api-auth:
    build:
      context: ./flask-auth
      dockerfile: Dockerfile
    container_name: api-auth
    restart: always
    depends_on:
      db-auth:
        condition: service_healthy
      redis-auth:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - movies_network
    expose:
      - "8000"

  nginx:
    image: nginx:1.23.1-alpine
    container_name: nginx-movies
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - api-auth
    networks:
      - movies_network
    ports:
      - "80:80"
