"""Create user and jwt tables

Revision ID: 95b013463608
Revises:
Create Date: 2023-05-06 03:09:57.411783

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "95b013463608"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "id", sa.UUID(), nullable=False, comment="Идентификатор пользователя"
        ),
        sa.Column(
            "created", sa.DateTime(), nullable=False, comment="Время создания записи"
        ),
        sa.Column(
            "modified", sa.DateTime(), nullable=True, comment="Время изменения записи"
        ),
        sa.Column(
            "login", sa.String(length=256), nullable=False, comment="Логин пользователя"
        ),
        sa.Column(
            "email",
            sa.String(length=320),
            nullable=False,
            comment="Адрес электронной почты пользователя",
        ),
        sa.Column(
            "password_hash",
            sa.String(length=128),
            nullable=False,
            comment="Хэш пароля пользователя",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("id", name=op.f("uq_users_id")),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_login"), ["login"], unique=True)

    op.create_table(
        "refresh_jwt",
        sa.Column(
            "id", sa.UUID(), nullable=False, comment="Идентификатор refresh jwt токена"
        ),
        sa.Column(
            "created", sa.DateTime(), nullable=False, comment="Время создания записи"
        ),
        sa.Column("refresh_jti", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_refresh_jwt_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_refresh_jwt")),
        sa.UniqueConstraint("id", name=op.f("uq_refresh_jwt_id")),
    )
    with op.batch_alter_table("refresh_jwt", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_refresh_jwt_refresh_jti"), ["refresh_jti"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("refresh_jwt", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_refresh_jwt_refresh_jti"))

    op.drop_table("refresh_jwt")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_login"))

    op.drop_table("users")
    # ### end Alembic commands ###
